module stack_memory (
    input wire sm,
    input wire clk,
    input wire [3:0] address,
    inout wire [7:0] data,
    input wire we,
    input wire re
);
    // 定义64x8位的内存
    reg [7:0] memory [15:0];
    
    // 数据总线缓冲器
    reg [7:0] data_buffer;
    
    // 设置数据端口为双向端口
    assign data = (re == 1'b1&&sm==1'b1) ? data_buffer : 8'bz;
    
    // 时钟上升沿触发读写操作
    always @(posedge clk) begin
        if (we == 1'b1&&sm==1'b1) begin
            // 写入操作
            memory[address] <= data;
        end
        if (re == 1'b1&&sm==1'b1) begin
            // 读取操作
            data_buffer <= memory[address];
        end
    end
endmodule